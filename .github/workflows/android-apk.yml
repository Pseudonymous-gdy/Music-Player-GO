name: Android CI

on:
  push:
    branches: [ "master", "dguo" ]
    tags:     [ "v*" ]        # 打 tag 时触发 Release
  pull_request:
  workflow_dispatch:

permissions:
  contents: write             # 发布 Release 需要写权限

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    env:
      ANDROID_DIR: project    # Android 工程目录（含 gradlew）
      APP_MODULE: app         # 主模块名
      ANDROID_API: "34"       # 如 compileSdkVersion 不是 34，请改
      BUILD_TOOLS: "34.0.0"   # 同步到匹配版本（如 33.0.2）

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          accept-android-sdk-licenses: true

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Make Gradle wrapper executable
        working-directory: ${{ env.ANDROID_DIR }}
        run: chmod +x ./gradlew

      - name: Ensure SDK packages (platforms/build-tools)
        run: |
          SDKMANAGER=$(which sdkmanager || echo "/usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager")
          echo "Using sdkmanager: ${SDKMANAGER}"
          # 先尝试无交互安装；若因许可证导致失败则自动回退为 auto-yes
          "${SDKMANAGER}" --install \
            "platforms;android-${{ env.ANDROID_API }}" \
            "build-tools;${{ env.BUILD_TOOLS }}" \
            "platform-tools" \
          || ( echo "Retrying with auto-yes..." && yes | "${SDKMANAGER}" --install \
            "platforms;android-${{ env.ANDROID_API }}" \
            "build-tools;${{ env.BUILD_TOOLS }}" \
            "platform-tools" || true )

      - name: Show Gradle info
        working-directory: ${{ env.ANDROID_DIR }}
        run: ./gradlew -v

      # ------------ Debug 分支（非 tag）------------
      - name: Build Debug APK
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        working-directory: ${{ env.ANDROID_DIR }}
        run: ./gradlew --no-daemon :${{ env.APP_MODULE }}:assembleDebug

      - name: Upload Debug artifact
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk-${{ github.run_number }}
          path: ${{ env.ANDROID_DIR }}/${{ env.APP_MODULE }}/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      # ------------ Release（打 tag）------------
      - name: Build Release (APK/AAB + mapping)
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        working-directory: ${{ env.ANDROID_DIR }}
        run: ./gradlew --no-daemon :${{ env.APP_MODULE }}:assembleRelease :${{ env.APP_MODULE }}:bundleRelease

      - name: Upload assets to GitHub Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            ${{ env.ANDROID_DIR }}/${{ env.APP_MODULE }}/build/outputs/apk/release/*.apk
            ${{ env.ANDROID_DIR }}/${{ env.APP_MODULE }}/build/outputs/bundle/release/*.aab
            ${{ env.ANDROID_DIR }}/${{ env.APP_MODULE }}/build/outputs/mapping/release/mapping.txt
